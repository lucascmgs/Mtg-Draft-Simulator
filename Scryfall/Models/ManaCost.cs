// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Scryfall.API.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ManaCost
    {
        /// <summary>
        /// Initializes a new instance of the ManaCost class.
        /// </summary>
        public ManaCost()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManaCost class.
        /// </summary>
        /// <param name="colors">Possible values include: 'W', 'U', 'B', 'R',
        /// 'G'</param>
        public ManaCost(string cost = default(string), double? cmc = default(double?), Colors? colors = default(Colors?), bool? colorless = default(bool?), bool? monocolored = default(bool?), bool? multicolored = default(bool?))
        {
            Cost = cost;
            Cmc = cmc;
            Colors = colors;
            Colorless = colorless;
            Monocolored = monocolored;
            Multicolored = multicolored;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cost")]
        public string Cost { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cmc")]
        public double? Cmc { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'W', 'U', 'B', 'R', 'G'
        /// </summary>
        [JsonProperty(PropertyName = "colors")]
        public Colors? Colors { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "colorless")]
        public bool? Colorless { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "monocolored")]
        public bool? Monocolored { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "multicolored")]
        public bool? Multicolored { get; set; }

    }
}
