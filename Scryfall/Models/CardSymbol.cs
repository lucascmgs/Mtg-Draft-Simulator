// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Scryfall.API.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CardSymbol
    {
        /// <summary>
        /// Initializes a new instance of the CardSymbol class.
        /// </summary>
        public CardSymbol()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CardSymbol class.
        /// </summary>
        /// <param name="colors">Possible values include: 'W', 'U', 'B', 'R',
        /// 'G'</param>
        public CardSymbol(string symbol = default(string), string looseVariant = default(string), string english = default(string), bool? transposable = default(bool?), bool? representsMana = default(bool?), double? cmc = default(double?), bool? appearsInManaCosts = default(bool?), bool? funny = default(bool?), Colors? colors = default(Colors?))
        {
            Symbol = symbol;
            LooseVariant = looseVariant;
            English = english;
            Transposable = transposable;
            RepresentsMana = representsMana;
            Cmc = cmc;
            AppearsInManaCosts = appearsInManaCosts;
            Funny = funny;
            Colors = colors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "symbol")]
        public string Symbol { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "loose_variant")]
        public string LooseVariant { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "english")]
        public string English { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transposable")]
        public bool? Transposable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "represents_mana")]
        public bool? RepresentsMana { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cmc")]
        public double? Cmc { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "appears_in_mana_costs")]
        public bool? AppearsInManaCosts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "funny")]
        public bool? Funny { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'W', 'U', 'B', 'R', 'G'
        /// </summary>
        [JsonProperty(PropertyName = "colors")]
        public Colors? Colors { get; set; }

    }
}
